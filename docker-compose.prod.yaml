version: '3.8'

services:
  db:
    image: postgres:15
    container_name: lookhub-db
    restart: unless-stopped
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./backups:/backups
    env_file:
      - .env.prod
    environment:
      - TZ=Europe/Moscow
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-lookhubweb} -d ${POSTGRES_DB:-lookhub}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lookhub-network

  redis:
    image: redis:7-alpine
    container_name: lookhub-redis
    restart: unless-stopped
    environment:
      - TZ=Europe/Moscow
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - lookhub-network

  lookhub-web:
    container_name: lookhub-web
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    build:
      context: ./LookHubWeb
      dockerfile: Dockerfile
    env_file:
      - .env.prod
    environment:
      - TZ=Europe/Moscow
      - PYTHONPATH=/lookhubweb
      - WORKERS=4
    volumes:
      - ./images:/lookhubweb/app/static/images
      - ./logs:/lookhubweb/logs
    command: [ "sh", "docker/app.sh" ]
    expose:
      - 8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - lookhub-network

  lookhub-worker:
    container_name: lookhub-worker
    restart: unless-stopped
    build:
      context: ./LookHubWeb
    command: [ "sh", "docker/celery.sh"]
    env_file:
      - .env.prod
    environment:
      - TZ=Europe/Moscow
      - PYTHONPATH=/lookhubweb
    depends_on:
      - lookhub-web
      - redis
    volumes:
      - ./logs:/lookhubweb/logs
    networks:
      - lookhub-network

  socialmediaposter-worker:
    container_name: socialmediaposter-worker
    restart: unless-stopped
    build:
      context: ./SocialMediaPoster
    env_file:
      - .env.prod
    environment:
      - TZ=Europe/Moscow
    depends_on:
      - redis
    command: [ "sh", "docker/app.sh" ]
    networks:
      - lookhub-network

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.flower
    container_name: flower
    restart: unless-stopped
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - TZ=Europe/Moscow
    depends_on:
      - redis
      - lookhub-worker
      - socialmediaposter-worker
    expose:
      - 5555
    networks:
      - lookhub-network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: lookhub-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - TZ=Europe/Moscow
    depends_on:
      - lookhub-web
      - dashboard
    volumes:
      - ./nginx-logs:/var/log/nginx
      - ./ssl:/etc/nginx/ssl:ro
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
    networks:
      - lookhub-network

volumes:
  redis-data:
    driver: local

networks:
  lookhub-network:
    driver: bridge
